# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

#   1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

#   Let us list the factors of the first seven triangle numbers:

# 1: 1
# 3: 1,3
# 6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28

# We can see that 28 is the first triangle number to have over five divisors.

#   What is the value of the first triangle number to have over five hundred divisors?

require 'pp'

def triangle(num)
  (1..num).inject(:+)
end

def divisors(num)
  (1..num**0.5).select{|n| num%n==0}.map{|n| [n, num/n]}.flatten.uniq.sort
end

#x = (1..10).map{|n| triangle(n)}

x = 0
solution=false
while !solution
  x+=1
  t = triangle(x)
  divs = divisors(t)
  solution=true if divs.size > 500
end
pp divs
pp t
